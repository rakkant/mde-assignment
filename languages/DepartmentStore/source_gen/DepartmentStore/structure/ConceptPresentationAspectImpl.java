package DepartmentStore.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_AbstractDepartment;
  private ConceptPresentation props_Cinema;
  private ConceptPresentation props_ClothingStore;
  private ConceptPresentation props_DepartmentStore;
  private ConceptPresentation props_Foodcourt;
  private ConceptPresentation props_Restaurant;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.AbstractDepartment:
        if (props_AbstractDepartment == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("AbstractDepartment");
          props_AbstractDepartment = cpb.create();
        }
        return props_AbstractDepartment;
      case LanguageConceptSwitch.Cinema:
        if (props_Cinema == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Cinema = cpb.create();
        }
        return props_Cinema;
      case LanguageConceptSwitch.ClothingStore:
        if (props_ClothingStore == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_ClothingStore = cpb.create();
        }
        return props_ClothingStore;
      case LanguageConceptSwitch.DepartmentStore:
        if (props_DepartmentStore == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("A department store where it composes of floors and shop departments");
          cpb.presentationByName();
          props_DepartmentStore = cpb.create();
        }
        return props_DepartmentStore;
      case LanguageConceptSwitch.Foodcourt:
        if (props_Foodcourt == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Foodcourt = cpb.create();
        }
        return props_Foodcourt;
      case LanguageConceptSwitch.Restaurant:
        if (props_Restaurant == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Restaurant = cpb.create();
        }
        return props_Restaurant;
    }
    return null;
  }
}
