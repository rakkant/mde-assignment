package DepartmentStore.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class AbstractDepartment_Constraints extends BaseConstraintsDescriptor {
  public AbstractDepartment_Constraints() {
    super(CONCEPTS.AbstractDepartment$7E);
  }

  public static class ManagerAmount_Property extends BasePropertyConstraintsDescriptor {
    public ManagerAmount_Property(ConstraintsDescriptor container) {
      super(PROPS.managerAmount$ebth, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castInteger(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:2ccc495f-6f1a-4640-979d-d46772f004c0(DepartmentStore.constraints)", "5378604374028239674"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, int propertyValue) {
      return propertyValue > 0;
    }
  }
  public static class EmployeeAmount_Property extends BasePropertyConstraintsDescriptor {
    public EmployeeAmount_Property(ConstraintsDescriptor container) {
      super(PROPS.employeeAmount$ecCm, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castInteger(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:2ccc495f-6f1a-4640-979d-d46772f004c0(DepartmentStore.constraints)", "5378604374028271223"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, int propertyValue) {
      return propertyValue > 3 && propertyValue <= 100;
    }
  }
  public static class Capacity_Property extends BasePropertyConstraintsDescriptor {
    public Capacity_Property(ConstraintsDescriptor container) {
      super(PROPS.capacity$h1Zr, container, false, false, true);
    }
    @Override
    public boolean validateValue(SNode node, Object propertyValue, CheckingNodeContext checkingNodeContext) {
      boolean result = staticValidateProperty(node, SPropertyOperations.castInteger(propertyValue));
      if (!(result) && checkingNodeContext != null) {
        checkingNodeContext.setBreakingNode(new SNodePointer("r:2ccc495f-6f1a-4640-979d-d46772f004c0(DepartmentStore.constraints)", "5378604374028301550"));
      }
      return result;
    }
    private static boolean staticValidateProperty(SNode node, int propertyValue) {
      return propertyValue < 3000;
    }
  }
  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(PROPS.managerAmount$ebth, new ManagerAmount_Property(this));
    properties.put(PROPS.employeeAmount$ecCm, new EmployeeAmount_Property(this));
    properties.put(PROPS.capacity$h1Zr, new Capacity_Property(this));
    return properties;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept AbstractDepartment$7E = MetaAdapterFactory.getConcept(0xad996c65d1384f51L, 0x97d767bdd4bb8c81L, 0x5eeaac0b2e7efa55L, "DepartmentStore.structure.AbstractDepartment");
  }

  private static final class PROPS {
    /*package*/ static final SProperty managerAmount$ebth = MetaAdapterFactory.getProperty(0xad996c65d1384f51L, 0x97d767bdd4bb8c81L, 0x5eeaac0b2e7efa55L, 0x5eeaac0b2e7efa56L, "managerAmount");
    /*package*/ static final SProperty employeeAmount$ecCm = MetaAdapterFactory.getProperty(0xad996c65d1384f51L, 0x97d767bdd4bb8c81L, 0x5eeaac0b2e7efa55L, 0x5eeaac0b2e7efa5bL, "employeeAmount");
    /*package*/ static final SProperty capacity$h1Zr = MetaAdapterFactory.getProperty(0xad996c65d1384f51L, 0x97d767bdd4bb8c81L, 0x5eeaac0b2e7efa55L, 0x5eeaac0b2e7efa81L, "capacity");
  }
}
